import * as t from 'assert';
import { parseScript, recovery } from '../../../src/escaya';

describe('Declarations - Var', () => {
  // Invalid cases
  for (const arg of [
    'var',
    'var x,;',
    'var x,',
    'var x, y,',
    'var x, ;',
    `var x,\ny,;`,
    'var x = 42,',
    'var []',
    `var var = 2000000;`,

    'var foo = {}; foo.{;',
    'var foo = {}; foo.};',
    'var foo = {}; foo.=;',
    'var foo = {}; foo.888;',
    'var foo = {}; foo.-;',
    'var foo = {}; foo.--;',

    'var t4 = ++await 1;',
    'var {  ...y, ...y } = {}',
    'var { foo: true / false } = {}',
    'var { *static() {} } = {}',
    'var { static(){} } = {}',
    'var f = (...x = 10) => x;',
    'var f = async (...x = 10) => x;',
    'var [...] = obj;',
    'var [...bar = foo] = obj;',
    'var [...foo, bar] = obj;',
    'var foo, [bar];',
    'var {a.b: c} = v;',
    'var {[a]: b.c} = v',
    `var x = 1;\nx\n--;`,
    `var x = 0;\nx\n++;`,
    `var x=0, y=0;\nvar z=\nx\n++\n++\ny`,
    'var ðŸ€’',
    // 'var { async *method({ w: [x, y, z] = [4, 5, 6] } = {}) {} } = {}',
    // 'var { async *method([[,] = g()]) {} } = {}',
    'var a, b; [([a]), (((([b]))))] = [[], []];',
    'var a, b; [({a}), (((({b}))))] = [{}, {}];',
    'var a, b; ({a:({a}), b:((({b})))} = {a:{}, b:{}} );',
    'function foo() { return {}; }; var [foo()] = [];',
    'class foo { method() { var [super()] = []; } }',
    'var {foo:a=b}',
    'var {foo:a}',
    'var {foo}',
    'var {foo,,} = x;',
    'var\nfoo()',
    'var [foo], bar;',
    'var [...foo,,] = obj;',
    'var [...[foo, bar],,] = obj;',
    'var {,} = obj;',
    'var {,,x} = obj;',
    'var {x,, y} = obj;',
    'var {x}, {y} = z;',
    'var {x,, y} = obj;',
    'var [...foo,,] = obj;',
    'var x = ([x = 25]) => x =>;',
    'var x = ([x = 25]) => x => x =>;',
    'var x = ([x = 25]) => x => x => {;',
    'var f = cond ? x=>{x.foo } => : x=>x + x + x + x + x + x + x',
    'var f = cond ? x=>{x.foo :} : x=>x + x + x + x + x + x + x',
    'var f = cond ? x=>x.foo : : x=>x + x + x + x + x + x + x',
    'var f = cond ? x=>x.foo; : x=>x + x + x + x + x + x + x',
    'var { set: 1, set: 2 } = {}',
    'var a; [a--] = [];',
    'var [a, ...rest, b] = c;',
    'var [a a, b] = c;',
    'var {...x = 1} = {}',
    'var a, b; [...a, b] = [];',
    'var [((a)] = [];',
    'var [[(a)], ((((((([b])))))))] = [[],[]];',
    'var [];',
    'var a.b;',
    'var [ a, b, c ];',
    'var [...++x]= {};',
    'var { x: ([y] = []) }= {};',
    'var [a,b,...rest,...rest1]= {};',
    'var { x: (function*() {}) }= {};',
    'var [...x + y]= {};',
    'var v = { *() { } };',
    'var { x: async function() {} }= {};',
    'var [eval(...["1"])] = []= {};',
    'var [g(...[])] = []= {};',
    'var { x : /foo/ }= {};',
    'var {...{x} }= {};',
    'var [...x + y]= {};',
    'var [...!x]= {};',
    'var [...++x]= {};',
    'var { y, ...x, y }= {};',
    'var { x: (50) }= {};',
    'var {x:y--} = {};',
    'var {a:(b)} = 0',
    'var [a.b] = 0',
    'var x, y, z; ({ x : ++y } = {});',
    'var x, y, z; for (x in { x : ++y } = {});',
    'var x, y, z; ({ x : y * 2 } = {});',
    'var x, y, z; for (x in { x : y * 2 } = {});',
    'var x, y, z; ({ get x() {} } = {});',
    'var x, y, z; for (x in { get x() {} } = {});',
    'var x, y, z; ({ x: y() } = {});',
    'var x, y, z; for (x in { x: y() } = {});',
    'var x, y, z; ([--x = 1] = {});',
    'var x, y, z; for (x in [--x = 1] = {});',
    'var x, y, z; ([x--] = {});',
    'var x, y, z; for (x in [x--] = {});',
    'var x, y, z; ([new.target] = {});',
    'var x, y, z; for (x in [new.target] = {});',
    'var x, y, z; ([this = 1] = {});',
    'var x, y, z; for (x in [this = 1] = {});',
    'var x, y, z; ([(50)] = {});',
    'var x, y, z; for (x in [(50)] = {});',
    'var x, y, z; ({ x: (async function() {}) } = {});',
    'var x, y, z; for (x in { x: (async function() {}) } = {});',
    //'var x, y, z; ([(x,y) => z] = {});',
    //'var x, y, z; for (x in [(x,y) => z] = {});',
    'var x, y, z; (({ x: x4, x: (x+=1e4) }) = {});',
    'var x, y, z; for (x in ({ x: x4, x: (x+=1e4) }) = {});',
    'var x, y, z; ((({ x: y } = {})) = {});',
    'var x, y, z; for (x in (({ x: y } = {})) = {});',
    'var x, y, z; ([ (...[a]) ] = {});',
    'var x, y, z; for (x in [ (...[a]) ] = {});',
    'var x, y, z; ({ x: (++y) } = {});',
    'var x, y, z; for (x in { x: (++y) } = {});',
    'var x, y, z; ([ ...[ ( [ a ] ) ] ] = {});',
    'var x, y, z; for (x in [ ...[ ( [ a ] ) ] ] = {});',
    'var ++a = {};',
    'var f = (++a) => {};',
    'var f = ++a => {};',
    'var delete a = {};',
    'var void a = {};',
    'var [ a, b, c ];',
    'var { a, b, c };',
    'var f = (typeof a) => {};',
    'var f = [a++] => {};',
    'var f = (z,[a++]) => {};',
    'var { x : y++ } = {};',
    'var x; let x;',
    'var f = ({ x : y++ }) => {};',
    'var f = { x : y++ } => {};',
    'var f = (z,(async (x, z) => y)) => {};',
    'var (async (x, z) => y) = {};',
    'var f = (((x, z) => y)) => {};',
    'var f = ((x, z) => y) => {};',
    'var f = (z,a.b) => {};',
    'var new a = {};',
    'var f = (new a) => {};',
    //'var f = a + a => {};',
    'var f = (z,a + a) => {};',
    'var f = (a + a) => {};',
    //'var f = a * a => {};',
    'var f = (z,a * a) => {};',
    'var a >>> a = {};',
    'var f = (a >>> a) => {};',
    'var f = function a() {} => {};',
    'var f = (z,function a() {}) => {};',
    'var async function a() {} = {};',
    'var f = (async function a() {}) => {};',
    'var f = a`bcd` => {};',
    'var f = (z,{x : {y : var}}) => {};',
    //'var {x : {y : var}} = {};',
    'var f = ({x : x = a+}) => {};',
    'var f = {x : x = a+} => {};',
    'var f = (z,{m() {} = 0}) => {};',
    'var {m() {} = 0} = {};',
    'var f = ({x : x = (a+)}) => {};',
    'var f = {x : x = (a+)} => {};',
    'var f = (z,{x : {y : var}}) => {};',
    'var f = ({ x : 3 }) => {};',
    'var f = { x : 3 } => {};',
    'var f = (z,{ x : /foo/ }) => {};',
    'var { x : /foo/ } = {};',
    'var { get a() {} } = {};',
    'var f = ({ get a() {} }) => {};',
    'var f = { set a() {} } => {};',
    'var f = (z,{ set a() {} }) => {};',
    'var f = (...typeof a) => {};',
    'var f = ...typeof a => {};',
    'var f = (z,...[a++]) => {};',
    'var ...[a++] = {};',
    'var f = ({ ...x, }) => {};',
    'var f = { ...x, } => {};',
    'var f = (z,{{ ...x, ...x = {} }) => {};',
    'var f = (z,{{ ...x, ...x = {} }) => {};',
    'var { ...x, ...x = ...{ x } } = {};',
    'var f = ({ ...x, ...x = ...{ x } }) => {};',
    'var f = { ...get a() {} } => {};',
    'var f = (z,{ ...*method() {} }) => {};',
    'var { ...*method() {} } = {};',
    'var f = ({...{ x = 5 } }) => {};',
    'var f = {...{ x = 5 } } => {};',
    'var {...[ x = 5 ] } = {};',
    'var f = ({...[ x = 5 ] }) => {};',
    'var f = {...x.f } => {};',
    'var f = (z,{...x.f }) => {};',
    'var {...x[0] } = {};',
    'var f = ({...x[0] }) => {};',
    'var [...x = 20] = 20;',
    'var {...r, ...e} = {a: 1, b: 2};',
    'var {...r, b} = {a: 1, b: 2};'
    // 'var { x: this }= {};',
    // 'try {} catch([this]) {}',
  ]) {
    it(`${arg}`, () => {
      t.throws(() => {
        parseScript(`${arg}`);
      });
    });
    it(`${arg}`, () => {
      t.throws(() => {
        parseScript(`${arg}`, { disableWebCompat: true });
      });
    });
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        recovery(`${arg}`, 'recovery.js');
      });
    });
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        recovery(`${arg}`, 'recovery.js', { module: true });
      });
    });
  }

  // Valid cases. Testing random cases to verify we have no issues with bit masks
  for (const arg of [
    'var x',
    'var x, y;',
    'var x = 42',
    'var eval = 42, arguments = 42',
    'var x = 14, y = 3, z = 1977',
    'var implements, interface, package',
    'var private, protected, public, static',
    'var let;',
    'var foo = { x = 10 } = {};',
    'var foo = { q } = { x = 10 } = {};',
    'var foo; foo = { x = 10 } = {};',
    'var foo; foo = { q } = { x = 10 } = {};',
    'var x; ({ x = 10 } = {});',
    'var q, x; ({ q } = { x = 10 } = {});',
    'var x; [{ x = 10 } = {}]',
    'var [x, y = 1] = [10, undefined];',
    'var [a, b] = [[x, y], { x: x, y: y }];',
    'var [x, y] = [1, "hello"];',
    'var [a, b, c] = [];',
    'var [x, ...a] = [1, 2, 3];',
    'var [x, y, ...a] = [1, 2, 3];',
    'var [x, y, z, ...a] = [1, 2, 3];',
    'var a = [...[...[...[...[...[]]]]]];',
    'var b = [...[...[...[...[...[5]]]]]];',
    'var a = [1, 2, 3];',
    'var a1 = [...a];',
    'var a2 = [1, ...a];',
    'var a3 = [1, 2, ...a];',
    'var a4 = [...a, 1];',
    'var a5 = [...a, 1, 2];',
    'var a6 = [1, 2, ...a, 1, 2];',
    'var a7 = [1, ...a, 2, ...a];',
    'var a8 = [...a, ...a, ...a];',
    'var [] = [1, "hello"];',
    'var [x] = [1, "hello"];',
    'var [x, y] = [1, "hello"];',
    'var [x, y, z] = [1, "hello"];',
    'var _b = { x: 5, y: "hello" }, x = _b.x, y = _b.y;',
    'var _c = { x: 5, y: "hello" }, a = _c.x, b = _c.y;',
    'var { a: x, b: { a: y, b: { a: z }}} = { a: 1, b: { a: "hello", b: { a: true } } };',
    'var { } = { x: 5, y: "hello" };',
    'var [,, z] = [0, 1, 2];',
    ' var { x: a } = { x: 5, y: "hello" };',
    'var x = ({ x: 5, y: "hello" }).x;',
    'var x = (_f = [1, 2], a = _f[0], b = _f[1], _f);',
    'var _b = _a.a, a = _b === void0 ? "" : _b, _c = _a.b, b = _c === void0 ? 0 : _c, _d = _a.c, c = _d === void0 ? false : _d;',
    'var _b = _a[0], a = _b === void0 ? 1 : _b, _c = _a[1], _d = _c[0], b = _d === void0 ? "hello" : _d, _e = _c[1], x = _e.x, _f = _e.y, c = _f === void0 ? false : _f;',
    'var [,, z] = [0, 1, 2];',
    'var { } = { x: 5, y: "hello" };',
    'var { x } = { x: 5, y: "hello" };',
    'var { y } = { x: 5, y: "hello" };',
    'var { x, y } = { x: 5, y: "hello" };',
    'var { x: a, y: b } = { x: 10, y: "hello" };',
    'var { 0: a, 1: b } = { 0: 10, 1: "hello" };',
    'var { "<": a, ">": b } = { "<": 10, ">": "hello" };',
    'var { 0: a, 1: b } = [10, "hello"];',
    'var [a, [b, { x, y: c }] = ["abc", { x: 10, y: false }]] = [1, ["hello", { x: 5, y: true }]];',
    'var x; (true ? { x = true } = {} : { x = false } = {})',
    'var q, x; (q, { x = 10 } = {});',
    'var { x = 10 } = { x = 20 } = {};',
    'var O = { async 0(arguments) {} }',
    'var O = { async method(foo, bar) {} }',
    'var { __proto__: x, __proto__: y } = {}',
    'var {let} = x;',
    'var O = { async method(eval) {} }',
    "var O = { async ['meth' + 'od'](eval) {} }",
    'var x \n /foo/',
    "var O = { async 'method'(eval) {} }",
    'var O = { async 0(eval) {} }',
    'var O = { async method(arguments) {} }',
    "var O = { async ['meth' + 'od'](arguments) {} }",
    "var O = { async 'method'(arguments) {} }",
    'var O = { async 0(arguments) {} }',
    'var O = { async method(foo, bar) {} }',
    'var foo = async ({x}) => { var x = 2; return x };',
    'var foo = async ({x}) => { { var x = 2; } return x; };',
    'var foo = async ({x}) => { var y = x; var x = 2; return y; };',
    'var foo = async ({x}, g = () => x) => { { var x = 2; } return g(); };',
    'var foo = async ({x}) => { { var g = () => x; var x = 2; } return g(); };',
    'var foo = async ({x}, g = () => eval("x")) => { var x = 2; return g(); };',
    'var foo = async ({x}, y) => { var y; return y };',
    'var foo = async ({x}, y) => { var z = y; var y = 2; return z; };',
    'var foo = async (y, g = () => y) => { var y = 2; return g(); };',
    'var foo = async ({x}, y, [z], v) => { var x, y, z; return x*y*z*v };',
    'var foo = async ({x}) => { function x() { return 2 }; return x(); }',
    'var foo = async ({x}) => { { function x() { return 2 } } return x(); }',
    'var foo = async (x = 1) => { return x };',
    'var [,,a,b,,,c=2,...d] = a;',
    'var foo = async (x, y = x) => { return x + y; };',
    'var foo = async (x, y = () => x) => { return x + y(); };',
    'var {x=1} = {a: 4, b: (x = 5)};',
    'var x = {a: 4, b: (x = 5)};',
    'var foo = {}; foo.if;',
    'var x; try {} catch (x) { x = 5; }',
    'var x; eval("");',
    'eval(""); var x;',
    'var {[foo("abc")]:x} = {};',
    'var {[foo()]:x} = y;',
    'var o = { get x() { log.push("get x"); return 1; }, get y() { log.push("get y"); return 2; } }',
    'var { [f("x")]:x, [f("y")]:y } = o;',
    'var [a, b, c] = f();',
    // last comma is not an elision.
    'var [a, b,] = f();',
    // last comma is not an elision, but the comma before the last is.
    'var [a, b, ,] = f();',
    'var [a, ...rest] = f();',
    'var x; var x;',
    'function x() {}; var x;',
    'var foo = {}; foo.if;',
    'var foo = {}; foo.yield;',
    'var foo = {}; foo.super;',
    'var foo = {}; foo.interface;',
    'var foo = {}; foo.eval;',
    'var foo = {}; foo.arguments;',

    'var g3 = ([{a, b}]) => { return a - b; };',
    'var g10 = ({x}, y) => { var y; return y };',
    'var g12 = (y, g = () => y) => { var y = 2; return g(); };',
    'var g1 = ({x}) => { var x = 2; return x };',
    'var g2 = ({c, d}, {a, b}) => { return c - d + a - b; };',
    'var g = ({a, b}) => { return a - b; };',
    'var { x : x, y : y, get, set } = { x : 1, y : 2, get: 3, set: 4 };',
    'var { x : x0, y : { z : z1 }, x : x1 } = o;',
    'var { x : x, y : y = 2 } = { x : 1 };',
    'var g30 = ({x = a}, ...a) => {};',
    'var g35 = ({x = () => a}, ...a) => { return x()[0] };',
    'var g2 = ({a = x}) => { function x() {}; return a; };',
    'var g8 = ({a = () => x}) => { var x; return a(); };',
    'var { x : { z1 }, y2} = { x : {}, y2 : 42 }',
    'var { x = f(42) } = { x : 27 };',
    'var {[foo("abc")]:x} = {abc:42};',
    'var y = Y(X());',
    'var o = { __proto__:null, "a1":1, "b2":2 };',
    'var __v_4 = {};',
    'var dv = new DataView(new ArrayBuffer(4), 2);',
    'var x = new y(100 * 1024);',
    'var x = k ? a.foo : a.foo;',
    'var r2 = /first\\u/;',
    'var r = /\\/\\//;',
    'var x
    '"use strict"; var x = 0; { let x; x = 6; }',
    '"use strict"; let x = 0; { let x = 6; }',
    'var x; { let x; }',
    'var [x, x] = [4, 5];',
    'var x; [x, x] = [4, 5];',
    'var foo = async (x = () => 1) => { return x() };',
    'var {[null]: y, ...x} = {null: 1, x: 1};',
    'var {[true]: y, ...x} = {true: 1, x: 1};',
    'var {[false]: y, ...x} = {false: 1, x: 1};',
    'var { ...y } =  { ...z} ;',
    'var z = { b: 1}',
    'var [,,,,] = a;',
    'var foo = {}; foo.super;',
    'var foo = {}; foo.interface;',
    'var x, {y} = obj;',
    'var foo, bar',
    'var [a, [b, c, d=2], ...rest] = test;',
    'const [...[x, ...[y, ...{z}]]] = [3, 4, 5];',
    'var [a, b,,,,] = test;',
    'var { 1.5: x, 2: y, ...z } = { 1.5: 1, 2: 2, 3:3 };',
    'var g4 = async (a = eval("x")) => { var x; return a; };',
    'var cls = class {};',
    'var\n{x} = x;',
    'var {x}\n= x;',
    'var [...x] = [1, 2, 3];',
    'var { x, } = { x: 23 };',
    'var { x: y = 33 } = { };',
    'var {...x} = { get v() { count++; return 2; } };',
    `var { w: { x, y, z } = { x: 4, y: 5, z: 6 } } = { w: undefined };`,
    `var { poisoned: x = ++initEvalCount } = poisonedProperty;`,
    `var { w: [x, y, z] = [4, 5, 6] } = { w: [7, undefined, ] };`,
    `var arrow = () => {};`,
    'var {a: [b]} = c',
    'var {[a]: b} = c',
    'var {[a]: [b]} = c',
    'var a = Array(...Array(5)).map(() => 1);',
    'var {a,b=0,c:d,e:f=0,[g]:[h]}=0',
    'var m = "foo"; var {[m]:[z]} = {foo:[1]}',
    `var xFn = function x() {};`,
    'var obj = { test262id: 1 };',
    'var [] = [];',
    'var [a] = [];',
    'var a; [a] = [];',
    'var a; [a] = [1];',
    'var a, b; [a, b] = [1];',
    'var a; [a] = [1, 2];',
    'var a = [1], i = 0; [a[i++]] = [];',
    'var [,] = [];',
    'var [a,] = [];',
    'var a; [a,] = [];',
    'var [a,,b] = [];',
    'var [,,a] = [];',
    'var a; [a] = [,,];',
    'var foo, eval;',
    'var foo, arguments;',
    'var foo = arguments = 1;',
    'var foo = eval = 1;',
    'var [...a] = [];',
    'var a; [...a] = [];',
    `var [[x]] = [null];`,
    `var [fn = function () {}, xFn = function x() {}] = [];`,
    `var arrow = () => {};`,
    'var {a: [o, {p}]} = d;',
    'var { ...x } = z;',
    'var foo, yield;',
    'var yield;',
    'var _ref = { z: "bar" };',
    'var { x, ...y } = z;',
    'var foo, let;',
    'var let;',
    'var { [x]: x, ...y } = z;',
    'var [a, b] = [1, 2];',
    'var {} = null;',
    'var foo = let = 1;',
    'var [[a, b]] = [[1, 2]];',
    'var [a, b, ...c] = [1, 2, 3, 4];',
    'var [[a, b, ...c]] = [[1, 2, 3, 4]];',
    'var [a, b] = [foo(), bar];',
    'var [a, b] = [clazz.foo(), bar];',
    'var [a, b] = [clazz.foo, bar];',
    'var arr = [ "a",, "b", ...c ];',
    'var arr = ["a",, "b"].concat(c.d(e));',
    'var [a, b] = [, 2];',
    'var ðž¸€',
    '[a, b] = [1, 2];',
    '[a, b] = [, 2];',
    'var x; x = 8;',
    'function x() { x = 0; }',
    "'use strict'; let x; eval('');",
    'var [x, x] = [4, 5];',
    'var z = (x %= 2);',
    'var z = (x &= y);',
    'var z = {};',
    'var f = () => {var O = { method() { var await = 1; return await; } };}',
    'var f = () => {var O = { method(await) { return await; } };}',
    'var f = () => {var O = { *method() { var await = 1; return await; } };}',
    'var O = { *method(await) { return await; } };',
    'var { x, } = { x: 23 };',
    'var { w: [x, y, z] = [4, 5, 6] } = {};',
    'var { w: [x, y, z] = [4, 5, 6] } = { w: [7, undefined, ] };',
    'var { x: y = 33 } = { };',
    'var { x: y, } = { x: 23 };',
    'var xCls = class x {};',
    'var cls = class {};',
    'var\n{x} = x;',
    'var {x}\n= x;',
    'var [...x] = [1, 2, 3];',
    'var { x, } = { x: 23 };',
    'var { x: y = 33 } = { };',
    'var {...x} = { get v() { count++; return 2; } };',
    `var { w: { x, y, z } = { x: 4, y: 5, z: 6 } } = { w: undefined };`,
    `var { poisoned: x = ++initEvalCount } = poisonedProperty;`,
    `var { w: [x, y, z] = [4, 5, 6] } = { w: [7, undefined, ] };`,
    `var arrow = () => {};`,
    'var {a: [b]} = c',
    'var {[a]: b} = c',
    'var {[a]: [b]} = c',
    'var {a,b=0,c:d,e:f=0,[g]:[h]}=0',
    `var a = b.c("string")?.d.e || 0;`,
    'var m = "foo"; var {[m]:[z]} = {foo:[1]}',
    `var xFn = function x() {};`,
    'var obj = { test262id: 1 };',
    'var [] = [];',
    'var [a] = [];',
    'var a; [a] = [];',
    'var a; [a] = [1];',
    'var a, b; [a, b] = [1];',
    'var a; [a] = [1, 2];',
    'var a = [1], i = 0; [a[i++]] = [];',
    'var [,] = [];',
    'var [a,] = [];',
    'var a; [a,] = [];',
    'var [a,,b] = [];',
    'var [,,a] = [];',
    'var a; [a] = [,,];',
    'var [...a] = [];',
    'var a; [...a] = [];',
    `var [[x]] = [null];`,
    `var [fn = function () {}, xFn = function x() {}] = [];`,
    `var arrow = () => {};`,
    'var {a: [o, {p}]} = d;',
    'var { ...x } = z;',
    'var _ref = { z: "bar" };',
    'var { x, ...y } = z;',
    'var { [x]: x, ...y } = z;',
    'var [a, b] = [1, 2];',
    'var {} = null;',
    'var [[a, b]] = [[1, 2]];',
    'var [a, b] = [1, 2];',
    'var {} = null;',
    'var [[a, b]] = [[1, 2]];',
    'var [a, b, ...c] = [1, 2, 3, 4];',
    'var [[a, b, ...c]] = [[1, 2, 3, 4]];',
    'var [a, b] = [foo(), bar];',
    'var [a, b] = [clazz.foo(), bar];',
    'var [a, b] = [clazz.foo, bar];',
    'var arr = [ "a",, "b", ...c ];',
    'var arr = ["a",, "b"].concat(c.d(e));',
    'var [a, b] = [, 2];',
    'var ðž¸€',
    '[a, b] = [1, 2];',
    '[a, b] = [, 2];',
    'var x; x = 8;',
    'function x() { x = 0; }',
    "'use strict'; let x; eval('');",
    'var [x, x] = [4, 5];',
    'var z = (x %= 2);',
    'var z = (x &= y);',
    'var z = {};',
    `var {x, y} = o`,
    'var {x: x, y: y} = o',
    'var {x=1, y=2} = o',
    'var a;',
    'var f, g = 42, h = false;',
    `var a = [ , 1 ], b = [ 1, ], c = [ 1, , 2 ], d = [ 1, , , ];`,
    `var foo = { }; foo.eval = {};`,
    `var TRIM = 'trim' in String.prototype;`,
    'var {x} = a, obj;',
    'var x = a, {y} = obj;',
    'var x, {y} = obj;',
    'var {x = y} = obj;',
    'var {x = y, z} = obj;',
    'var {x, y = z} = obj;',
    'var {x = y, z = a} = obj;',
    'var {x : y} = obj;',
    'var {x : y, z} = obj;',
    'var {x, y : z} = obj;',
    'var {x : y, z : a} = obj;',
    'var {x : y = z} = obj;',
    'var {x : y, z, a : b = c} = obj;',
    'var {[x]: y} = z;',
    'var {[x]: y = z} = a;',
    'var {a, [x]: y} = a;',
    'var [...x] = y',
    'var _\\u{1EE03}',
    'var a, [...x] = y',
    'var {...x} = y',
    'var {[2]: y} = {2:3}',
    'var diff = arrayDiff(before, after, function(a, b, callback) {})',
    'var [x, ...[foo, bar]] = obj;',
    'var [a=[...b], ...c] = obj;',
    'var {} = obj;',
    'var {x} = obj;',
    'var {x,} = obj;',
    'for (var [foo] = arr;;);',
    'for (var [foo,] = arr;;);',
    'for (var [foo,,] = arr;;);',
    'for (var [,foo] = arr;;);',
    'for (var [a=[...b], ...c] = obj;;);',
    'for (var {x, y} = obj;;);',
    'for (var {x} = a, {y} = obj;;);',
    'var {a: x, b: x} = {a: 4, b: 5};',
    'var x = 4; var x = 5;',
    'var [foo,bar=b] = x',
    'var [foo=a,bar=b] = x',
    'var [...bar] = obj;',
    'var {[a]: c} = v;',
    'var [foo=a,bar] = x;',
    'var [foo] = x;',
    'var {[a.b]: c} = v;',
    'var [foo, ...bar] = obj;',
    'var {foo} = x, {foo} = y',
    'var {foo} = x, b',
    'var {foo} = x, b = y',
    'var x, {foo} = y',
    'var x = y, {foo} = z',
    'var {foo=a} = x',
    'var {foo=a,bar} = x',
    'var {foo,bar=b} = x',
    'var {foo=a,bar=b} = x',
    'var {foo:a} = x',
    'var {foo:a,bar} = x',
    'var {foo,bar:b} = x',
    'var {foo:a,bar:b} = x',
    'var foo = bar\nvar zoo;',
    'var x; "use strict"; with (x) y;',
    'var foo = bar',
    'var foo = bar, zoo = boo;',
    'var foo = bar, zoo = boo',
    'var\nfoo',
    'var [] = x;',
    'var source = "\\uD800!";',
    'var c = new C(() => { return x; } )',
    'var â„˜;',
    'var â„˜ = x;',
    'var [foo,,] = arr;',
    'var [,foo] = arr;',
    'var [,,foo] = arr;',
    'var [foo,bar] = arr;',
    'var [foo,,bar] = arr;',
    'var [foo] = arr, [bar] = arr2;',
    'var [foo] = arr, bar;',
    'var [foo] = arr, bar = arr2;',
    'var foo, [bar] = arr2;',
    'var [foo=a] = arr;',
    `var test = async a => await test();`,
    `var O = { p: 1 }, x = 10; ; if (x++ ** 10) { foo(); }`,
    'var { [key++]: y, ...x } = { 1: 1, a: 1 };',
    'var { [++key]: y, [++key]: z, ...rest} = {2: 2, 3: 3};',
    'var { 9007199254740991n: it } = { 9007199254740991n: 1 };',
    `var lambdaArgs = await (async (a, b ,c) => a + b + c);`,
    'var object = { a: "A", [1]: "B",  c: "C", [ID(2)]: "D", };',
    'var { [fn()]: x, ...y } = z;',
    'var [foo=a, bar] = arr;',
    'var [foo, bar=b] = arr;',
    'var [foo=a, bar=b] = arr;',
    '[1 <= 0]',
    'var [] = x',
    'var [,] = x',
    'var [,,] = x',
    'var [foo] = x',
    'var [foo,] = x',
    'var [foo,,] = x',
    'var [,foo] = x',
    'var [,,foo] = x',
    'var [foo,bar] = x',
    'var [foo,,bar] = x',
    'var [foo] = x, [foo] = y',
    'var [foo] = x, b',
    'var [foo] = x, b = y',
    'var x, [foo] = y',
    'var x = y, [foo] = z',
    'var [foo=a] = c',
    'var [foo=a,bar] = x',
    'var [foo,bar=b] = x',
    'var [foo=a,bar=b] = x',
    'var [...bar] = obj;',
    'var [foo, ...bar] = obj;',
    'var {foo} = x, {foo} = y',
    'var {foo} = x, b',
    'var {foo} = x, b = y',
    'var x, {foo} = y',
    'var z = (x *= -1);',
    `var foo = { eval: 1 };`,
    'var await = `simple template`;',
    'var y = `{${x}}`;',
    'var y = `{ ${x} }`;',
    'var b = condition ? a?.x.?y : a?.y?.z;',
    `var foo = { }; foo.eval = {};`,
    'var f13 = async function f(x = f) { function f() {}; return x; }',
    '({ __proto__: x, __proto__: y } = {})',
    'var { x = 10 } = (o = { x = 20 } = {});',
    'var x; (({ x = 10 } = { x = 20 } = {}) => x)({})',
    'var [...a] = [];',
    'var a; [...a] = [];',
    'var [a = 1] = [];',
    'var [a, b = 1] = [];',
    'var a, b; [a, b = 1] = [];',
    'var foo = { x = 10 } = {};',
    'var foo = { q } = { x = 10 } = {};',
    'var foo; foo = { x = 10 } = {};',
    'var foo; foo = { q } = { x = 10 } = {};',
    'var x; ({ x = 10 } = {});',
    'var q, x; ({ q } = { x = 10 } = {});',
    'var x; [{ x = 10 } = {}]',
    'var x; (true ? { x = true } = {} : { x = false } = {})',
    'var q, x; (q, { x = 10 } = {});',
    'var { x = 10 } = { x = 20 } = {};',
    'var { __proto__: x, __proto__: y } = {}',
    '({ __proto__: x, __proto__: y } = {})',
    'var { x = 10 } = (o = { x = 20 } = {});',
    'var x; (({ x = 10 } = { x = 20 } = {}) => x)({})',
    'var [[a]] = [[]];',
    'var a; [[a]] = [[]];',
    'var [a] = 1;',
    'var [a, [b]] = [1, []];',
    'var a, b; [a, [b]] = [1, []];',
    'var a, b; [((((a)))), b] = [];',
    'var [[[...a]]] = [[[]]];',
    'var a; [[[...a]]] = [[[]]];',
    'var [[...a], ...b] = [[],];',
    'var a, b; [[...a], ...b] = [[],];',
    'var [a, a] = [];',
    'var hi = function eval() { };',
    'var f = () => {var O = { method() { var await = 1; return await; } };}',
    'var f = () => {var O = { method(await) { return await; } };}',
    'var f = () => {var O = { *method() { var await = 1; return await; } };}',
    'var O = { *method(await) { return await; } };',
    'var { x, } = { x: 23 };',
    'var { w: [x, y, z] = [4, 5, 6] } = {};',
    'var { w: [x, y, z] = [4, 5, 6] } = { w: [7, undefined, ] };',
    'var { x: y = 33 } = { };',
    'var { x: y, } = { x: 23 };',
    'var xCls = class x {};',
    'var foo = {}; foo.arguments;',
    'var [,,] = x;',
    'var\nfoo',
    'var [foo,,] = x;',
    'var [,foo] = x;',
    'var [foo,bar] = x;',
    'var [foo] = x, [foo] = y;',
    'var [foo] = x, b;',
    'var [...[a, b]] = obj;',
    'var [foo] = x, b = y;',
    'var x, [foo] = y;',
    'var {} = x;',
    'var {foo,} = x;',
    'var O = { async method() { await 1; } }',
    'var O = { async ["meth" + "od"]() { await 1; } }',
    'var [ a, , b ] = list',
    'var O = { async 0() { await 1; } }',
    'var let',
    'var [let] = []',
    'var x; { with ({}) { x = 1; } }',
    'for (var {x : y} of obj);',
    "var o = { get [/./.exec('')](){} }",
    'var { [key]: y, ...x } = { b: 1, a: 1 };',
    'var {[key]: y, ...x} = {1: 1, a: 1};',
    'var x = ({x = 30}, [y], z) => x',
    'var x = ([x = 25]) => x => x => ({x} = {})',
    'var x = foo => x => x => x => {x}',
    'var x = a =>{}',
    'var [var1, var2, [var3, var4]] = [1, 2, [3, 4]];',
    'var [{var1: var2}, {var3: var4}] = [{var1: 1}, {var3: 2}];',
    'var var1 = 0; for (var1; var1 < 2; ++var1) { function foo() { var1; }}',
    'var var1 = 0; for (var1; var1 > 2; ) { function foo() { var1 = 6; } }',
    'var [var1, ...var2] = [1, 2, 3];',
    'var {var1: var2, var3: var4} = {var1: 1, var3: 2};',
    'var {var1: var2, var3: {var4: var5}} = {var1: 1, var3: {var4: 2}};',
    'var ancestors = [/^VarDef$/, /^(Const|Let|Var)$/, /^Export$/];',
    'var idx = reverse ? --to : from++;',
    'for (var [x, ...[foo, bar]] = obj;;);',
    'var x = Date.parse("Jan 01, 1970 00:00:00 " + timezone) / 60000;',
    'var { x : y } = {};',
    'var { x : y = 1 } = {};',
    'var { get = 1, set = 2 } = {};',
    'var [a] = {};',
    'var [a = 1] = {};',
    'var [a, b = 42, c] = {};',
    'var { x : x = 1, y : y } = {};',
    'var {42 : x} = {};',
    'var {42 : x = 42} = {};',
    'var {42e-2 : x = 42} = {};',
    'var {42e-2 : x} = {};',
    'var {42 : x = 42} = {};',
    'var {var: x} = {};',
    'var {[x] : z} = {};',
    'var {[1+1] : z} = {};',
    'var {[foo()] : z} = {};',
    'var [...rest] = {};',
    'var x; { var x = 5; }',
    'var x = 5; function x() {}',
    'var [x, x] = [4, 5];',
    'var x = 4; var x = 5;',
    'var {x} = {x: 4, b: (x = 5)};',
    'var x; try {} catch (x) { x = 5; }',
    'var x; { var x; }',
    'function x() {}; var x;',
    'var x; x = 8;',
    'var x; { with ({}) { x = 1; } }',
    'var { __proto__: x, __proto__: y} = {};',
    'var { x : x, y : y = 42, ...z } = {};',
    'var [{x:x = 1, y:y = 2, ...z}, [a = 3, b = 4, c = 5]] = {};',
    'var {x, ...y} = {};',
    'var {[x] : z, ...y} = {};',
    'var { __proto__: x, __proto__: y, ...z} = {};',
    'var f = ({ __proto__: x, __proto__: y, ...z}) => {};',
    'var f = ([{x:x, y:y, ...z}, [a,b,c]]) => {};',
    'var f = ({ x : x, y : y = 42, ...z }) => {};',
    'var f = ({ x : x = 1, y : y, ...z }) => {};',
    'var f = ({x = 42, y = 15, ...z}) => {};',
    'var f = ([a,,...rest]) => {};',
    'var f = ([a,b,...rest]) => {};',
    'var f = ({[foo()] : z}) => {};',
    'var f = ({[x] : z}) => {};',
    'var f = ({42e-2 : x}) => {};',
    'var f = ([{x:x = 1, y:y = 2}, [a = 3, b = 4, c = 5]]) => {};',
    'var f = ([{x:x, y:y}, [a,b,c]]) => {};',
    'var f = ({ x : x, y : y = 42 }) => {};',
    'var f = ({ get = 1, set = 2 }) => {};',
    'var f = ({ x : y = 1 }) => {};',
    'var f = (a) => {};',
    'var f = ([a,b,c]) => {};',
    'var f = ({arguments: x, ...z}) => {};',
    'var f = (x,{var: x = 42}) => {};',

    'var x, y, z; (x ={ x : y }= z = {});',
    'var x, y, z; for (x in{ x : foo().y }= z = {});',
    'var x, y, z; m(["a"]) ?{ x : foo()[y] }= {} : rhs',
    'var x, y, z; m(["b"]) ? lhs :{ x : foo()[y] }= {}',
    'var x, y, z; for (x in{ x : foo()[y] }= {});',
    'var x, y, z; ({ x : { foo: y } } = {});',
    'var x, y, z; (x ={ x : y.z }= z = {});',
    'var x, y, z; (x ={ x : y.z }= z = {});',
    'var x, y, z; for (x in{ x : y.z }= z = {});',
    'var x, y, z; m(["a"]) ?{ x : y.z }= {} : rhs',
    'var x, y, z; m(["b"]) ? lhs :{ x : y[z] }= {}',
    'var x, y, z; for (x in{ x : y[z] }= {});',
    'var x, y, z; ({ x : { foo: y } } = {});',
    'var x, y, z; (x ={ x : { y } }= z = {});',
    'var x, y, z; for (x in{ x : { y } }= z = {});',
    'var x, y, z; m(["a"]) ?{ x : { y } }= {} : rhs',
    'var x, y, z; m(["b"]) ? lhs :{ x : { foo: y } }= {}',
    'var x, y, z; for (x in{ x : { foo: y } }= {});',
    'var x, y, z; ({ x : { foo: y } } = {});',
    'var x, y, z; for (x in { x : { foo: y[z] } } = z = {});',
    'var x, y, z; m(["a"]) ? { x : { foo: y[z] } } = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : { x : { foo: y[z] } } = {}',
    'var x, y, z; for (x in { x : [ y ] } = {});',
    'var x, y, z; ({ x : [ y ] } = {});',
    `var O = { async 0(eval) {} }`,
    'var x, y, z; (x = { x : [ foo().y ] } = z = {});',
    'var x, y, z; for (x in { x : [ foo().y ] } = z = {});',
    'var x, y, z; m(["a"]) ? { x : [ y[z] ] } = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : { x : [ y[z] ] } = {}',
    'var x, y, z; for (x in { x : [ y[z] ] } = {});',
    'var x, y, z; ({ x : [ y[z] ] } = {});',
    'var x, y, z; (x = { x : foo()[y] = 10 } = z = {});',
    'var x, y, z; for (x in { x : foo()[y] = 10 } = z = {});',
    'var x, y, z; m(["a"]) ? { x : foo()[y] = 10 } = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : { x : y.z = 10 } = {}',
    'var x, y, z; for (x in { x : y.z = 10 } = {});',
    'var x, y, z; ({ x : y[z] = 10 } = {});',
    'var x, y, z; (x = { x : y[z] = 10 } = z = {});',
    'var x, y, z; for (x in { x : y[z] = 10 } = z = {});',
    'var x, y, z; m(["a"]) ? { x : { foo: y = 10 } = {} } = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : { x : { foo: y = 10 } = {} } = {}',
    'var x, y, z; for (x in { x : { foo: y = 10 } = {} } = {});',
    'var x, y, z; ({ z : { __proto__: x, __proto__: y } = z } = {});',
    'var x, y, z; (x = { z : { __proto__: x, __proto__: y } = z } = z = {});',
    'var x, y, z; for (x in { x : [ y[z] = 10 ] = {} } = z = {});',
    'var x, y, z; m(["a"]) ? { x : [ y[z] = 10 ] = {} } = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : { x : [ foo().y = 10 ] = {} } = {}',
    'var x, y, z; for (x in { x : [ foo().y = 10 ] = {} } = {});',
    'var x, y, z; ({ x : [ y = 10 ] = {} } = {});',
    'var x, y, z; (x = { x : [ y = 10 ] = {} } = z = {});',
    'var x, y, z; for (x in { x : [ y = 10 ] = {} } = z = {});',
    'var x, y, z; m(["a"]) ? [ x ] = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : [ x ] = {}',
    'var x, y, z; for (x in [ x ] = {});',
    'var x, y, z; ([ foo()[x] ] = {});',
    'var x, y, z; (x = [ foo()[x] ] = z = {});',
    'var x, y, z; for (x in [ foo()[x] ] = z = {});',
    'var x, y, z; m(["a"]) ? [ x[y] ] = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : [ x[y] ] = {}',
    'var x, y, z; for (x in [ { x : y } ] = {});',
    'var x, y, z; ([ { x : y } ] = {});',
    'var x, y, z; (x = [ { x : foo().y } ] = z = {});',
    'var x, y, z; for (x in [ { x : foo().y } ] = z = {});',
    'var x, y, z; m(["a"]) ? [ { x : foo().y } ] = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : [ { x : foo()[y] } ] = {}',
    'var x, y, z; (x = [ { x : foo()[y] } ] = z = {});',
    'var x, y, z; for (x in [ { x : foo()[y] } ] = z = {});',
    'var x, y, z; m(["a"]) ? [ { x : x[y] } ] = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : [ { x : x[y] } ] = {}',
    'var x, y, z; for (x in [ { x : x[y] } ] = {});',
    'var x, y, z; ([ [ foo().x ] ] = {});',
    'var x, y, z; for (x in [ [ foo().x ] ] = {});',
    'var x, y, z; ([ [ foo()[x] ] ] = {});',
    'var x, y, z; (x = [ [ foo()[x] ] ] = z = {});',
    'var x, y, z; for (x in [ [ x.y ] ] = z = {});',
    'var x, y, z; m(["a"]) ? [ [ x.y ] ] = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : [ [ x[y] ] ] = {}',
    'var x, y, z; (x = [ [ x[y] ] ] = z = {});',
    'var x, y, z; for (x in [ [ x[y] ] ] = z = {});',
    'var x, y, z; m(["a"]) ? [ x = 10 ] = {} : rhs',
    'var x = async ({x}, y) => { var y; return y };',
    'var x = async ({x}, y, [z], v) => { var x, y, z; return x*y*z*v };',
    'var x, y, z; m(["b"]) ? lhs : [ x = 10 ] = {}',
    'var x, y, z; for (x in [ x = 10 ] = {});',
    'var x, y, z; ([ foo().x = 10 ] = {});',
    'var x, y, z; for (x in [ foo().x = 10 ] = {});',
    'var x, y, z; ([ foo()[x] = 10 ] = {});',
    'var x, y, z; (x = [ foo()[x] = 10 ] = z = {});',
    'var x, y, z; for (x in [ x[y] = 10 ] = z = {});',
    'var x, y, z; m(["a"]) ? [ x[y] = 10 ] = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : [ { x = 10 } = {} ] = {}',
    'var x, y, z; for (x in [ { x = 10 } = {} ] = {});',
    'var x, y, z; ([ { x : y = 10 } = {} ] = {});',
    'var x, y, z; (x = [ { x : foo().y = 10 } = {} ] = z = {});',
    'var x, y, z; for (x in [ { x : foo()[y] = 10 } = {} ] = z = {});',
    'var x, y, z; m(["a"]) ? [ { x : x.y = 10 } = {} ] = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : [ { x : x[y] = 10 } = {} ] = {}',
    'var x, y, z; for (x in [ [ x = 10 ] = {} ] = {});',
    'var x, y, z; ([ [ x = 10 ] = {} ] = {});',
    'var x, y, z; (x = [ [ foo().x = 10 ] = {} ] = z = {});',
    'var x, y, z; for (x in [ [ foo().x = 10 ] = {} ] = z = {});',
    'var x, y, z; m(["a"]) ? [ [ foo()[x] = 10 ] = {} ] = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : [ [ foo()[x] = 10 ] = {} ] = {}',
    'var x, y, z; for (x in [ [ x.y = 10 ] = {} ] = {});',
    'var x, y, z; ([ [ x.y = 10 ] = {} ] = {});',
    'var x, y, z; (x = [ [ x[y] = 10 ] = {} ] = z = {});',
    'var x, y, z; for (x in [ [ x[y] = 10 ] = {} ] = z = {});',
    'var x, y, z; m(["a"]) ? { x : y = 1 } = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : { x : y = 1 } = {}',
    'var x, y, z; for (x in { x = 1, y: z, z: y } = {});',
    'var x, y, z; ({ x = 1, y: z, z: y } = {});',
    'var x, y, z; ({x = 42, y = 15} = {});',
    'var x, y, z; (x = {x = 42, y = 15} = z = {});',
    'var x, y, z; for (x in { x : x = 1, y : y } = z = {});',
    'var x, y, z; m(["a"]) ? { x : x = 1, y : y } = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : [{x:x = 1, y:y = 2}, [z = 3, z = 4, z = 5]] = {}',
    'var x, y, z; for (x in [{x:x = 1, y:y = 2}, [z = 3, z = 4, z = 5]] = {});',
    'var x, y, z; ([x,,y] = {});',
    'var x, y, z; (x = [x,,y] = z = {});',
    'var x, y, z; for (x in [(x),,(y)] = z = {});',
    'var x, y, z; m(["a"]) ? [(x),,(y)] = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : [(x)] = {}',
    'var x, y, z; for (x in [(x)] = {});',
    'var x, y, z; ({42 : x} = {});',
    'var x, y, z; (x = {42 : x} = z = {});',
    'var x, y, z; for (x in {42e-2 : x} = z = {});',
    'var x, y, z; m(["a"]) ? {42e-2 : x} = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : {[1+1] : z} = {}',
    'var x, y, z; for (x in {[1+1] : z} = {});',
    'var x, y, z; ({[foo()] : foo().bar} = {});',
    'var x, y, z; ({[foo()] : foo().bar} = {});',
    'var x, y, z; (x = {[foo()] : this.bar} = z = {});',
    'var x, y, z; for (x in {[foo()] : this.bar} = z = {});',
    'var x, y, z; m(["a"]) ? [...x] = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : [...x] = {}',
    'var x, y, z; for (x in [((x, y) => z).x] = {});',
    'var x, y, z; ([((x, y) => z).x] = {});',
    'var x, y, z; (x = {x: ((y, z) => z).x} = z = {});',
    'var x, y, z; for (x in {x: ((y, z) => z).x} = z = {});',
    'var x, y, z; m(["a"]) ? [((x, y) => z)["x"]] = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : [((x, y) => z)["x"]] = {}',
    'var x, y, z; for (x in {x: ((y, z) => z)["x"]} = {});',
    'var x, y, z; ({x: ((y, z) => z)["x"]} = {});',
    'var x, y, z; (x = { ...d.x } = z = {});',
    'var x, y, z; for (x in { ...d.x } = z = {});',
    'var x, y, z; m(["a"]) ? { ...c[0]} = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : { ...c[0]} = {}',
    'var x, y, z; for (x in { x: (y) } = {});',
    'var x, y, z; ({ x: (y) } = {});',
    'var x, y, z; ({ x: (y) = [] } = {});',
    'var x, y, z; (x = { x: (y) = [] } = z = {});',
    'var x, y, z; for (x in { x: (foo.bar) } = z = {});',
    'var x, y, z; m(["a"]) ? { x: (foo.bar) } = {} : rhs',
    'var x, y, z; m(["b"]) ? lhs : { x: (foo["bar"]) } = {}',
    'var x, y, z; for (x in { x: (foo["bar"]) } = {});',
    'var x, y, z; ([ (y) ] = {});',
    'var x, y, z; (x = [ (y) ] = z = {});',
    'var x, y, z; for (x in [ (foo.bar) ] = z = {});',
    'var x, y, z; m(["a"]) ? [ (foo.bar) ] = {} : rhs',
    'var f = (x, {[x] : z}) => {};',
    'var f = (x,{[foo()] : z}) => {};',
    'var f = (x,{ __proto__: x, __proto__: y}) => {};',
    'var f = (x,{arguments: x}) => {};',
    // 'var f = (x,eval: x}) => {};',
    'var f = (x,{42e-2 : x = 42}) => {};',
    'var f = (x,[{x:x = 1, y:y = 2}, [a = 3, b = 4, c = 5]]) => {};',
    'var f = (x,{ x : x, y : y = 42 }) => {};',
    'var f = (x,{ get = 1, set = 2 }) => {};',
    'var f = (x,[a]) => {};',
    'var f = (x,[a,b,c]) => {};',
    'var f = (x,{[1+1] : z}) => {};',
    'var f = (x,{[foo()] : z}) => {};',
    'var f = (x,{ __proto__: x, __proto__: y}) => {};',
    'var f = (x,[...rest]) => {};',
    'var f = (x,{}) => {};',
    'var f = (x,{var: x}) => {};',
    'var f = (x,{var: x = 42}) => {};',
    'var await = { await }',
    `var q
    /d/`,
    `var obj = {
      a: function() {},
      b: () => {},
      c() { },
      get d() { },
      set d(val) { },
      x: function withName() { },
      y: class { },
      z: class ClassName { },
      ''() {},
      42: function() {},
      4.2: function() {},
      __proto__: function() {},
    };`,
    ` var obj = {
      ['']: function() {},
      [a]: function() {},
      [sym1]: function() {},
      [sym2]: function withName() {},
      [symNoDescription]: function() {},
      [proto]: function() {},

      get [sym3]() {},
      set [b](val) {},
    };`,
    ` var objMethods = {
      ['']() {},
      [a]() {},
      [sym1]() {},
      [symNoDescription]() {},
      [proto]() {},
    };`,
    `var {
      a = function() {},
      b = () => {},
      x = function withName() { },
      y = class { },
      z = class ClassName { },
      q = class { static name() { return 42 } },
      foo: bar = function() {},
      inParens = (() => {}),
      inManyParens = ((((() => {})))),
    } = {};`,
    `var [
      a = function() {},
      b = () => {},
      x = function withName() { },
      y = class { },
      z = class ClassName { },
      q = class { static name() { return 42 } },
      inParens = (() => {}),
      inManyParens = ((((() => {})))),
    ] = [];`
  ]) {
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseScript(`${arg}`, { loc: true });
      });
    });
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseScript(`${arg}`, { loc: true, disableWebCompat: true });
      });
    });
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        recovery(`${arg}`, 'recovery.js');
      });
    });
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        recovery(`${arg}`, 'recovery.js', { module: true });
      });
    });
  }
});
