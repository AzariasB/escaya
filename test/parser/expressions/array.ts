import * as t from 'assert';
import { parseScript, parseModule, recovery } from '../../../src/escaya';

describe('Expressions - Array', () => {
  // Invalid cases
  for (const arg of ['[', '[,', '[] += a']) {
    it(`${arg}`, () => {
      t.throws(() => {
        parseScript(`${arg}`);
      });
    });
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        recovery(`${arg}`, 'recovery.js');
      });
    });
  }

  // Valid cases. Testing random cases to verify we have no issues with bit masks
  for (const arg of [
    '[{}[x]] = y',
    '[[][x]] = y',
    '[a[x.y] = a] = z',
    '[a[x.y] = a + b] = z',
    '[x()[y] = a + b] = z',
    '[new x()[y]] = z',
    '[new x()[y] = a + b] = z',
    '[new x()[y] = a] = z',
    '[async (x, y) => {}].x',
    '[(x) => ok].x',
    '[(x, y) => {}].x',
    '[x => {}].x',
    '[x => ok].x',
    '[x().y = a] = z',
    '[{x = y}] = z',
    '[new x().y] = z',
    '[new x().y = a] = z',
    'x, [foo, bar] = doo;',
    '[new x().y = a + b] = z',
    '[x, y, ...z] = obj',
    '[[x] = true] = y',
    '[...[{a: b}.c]] = [];',
    'x = [a, b] = y',
    '[...[x].map(y, z)[x]] = a;',
    '[(x())[y] = a,] = z;',
    '[(x())[y],] = z;',
    '[((((a)))), b] = [];',
    '[x] = obj',
    '[(x.y)] = obj',
    '[[1].c] = [];',
    '[foo] = arr;',
    '[...x.list] = a;',
    '([(x), y] = x);',
    '[{a: 1}.c] = [];',
    '[...let [x] = y]',
    '[x, y, ...z = 1]',
    '[(x)] = obj',
    '[x, y, z = 1]',
    'function a([x, , [, z]]) {}',
    `[this];`,
    '[,a,]',
    '[a,,,,,,,,,b]',
    '[,,]',
    '[[]]',
    '[...[x]] = x',
    '[[{},{}]]',
    '[{}[foo]] = x',
    '[this]',
    '[a.b=[c.d]=e] = f',
    '[{x: y.z}]',
    '[((((a)))), b] = [];',
    '[...z = 1]',
    '[arguments] = []',
    '[x, {y = 1}] = [0, {}]',
    '[x, y, ...[z] = [1]]',
    '[...[z] = [1]]',
    '[a,,b] = array;',
    '[{a = 0}] = [{}];',
    'function f([...[{a = 0}]]) {}',
    'function f1({a} = {a:1}, b, [c] = [2]) {}',
    'h = ([...[{a = 0}]]) => {};',
    '[a,b,...rest]= {}',
    '[a,,...rest]= {}',
    '[[...x] = [2, 1, 3]]',
    '[foo()[x] ] = {}',
    '[ x[y] ]',
    '[{ foo: foo().y = 10 }]',
    '[{ x : y[z] = 10 } = {}]',
    '[{ x : foo().y = 10 } = {}]',
    '[[ foo()[y] ]]',
    '[{ x : [ y ] } = {}] = z',
    '[{ x : { foo: foo().y } } = {}] = z',
    '[{ x : { foo: foo()[y] } } = {}] = z',
    '[{ x : y[z] } = {}] = z',
    '[{ z : { __proto__: x, __proto__: y } = z } = {}]',
    '[{ foo: y[z] = 10 } = {}]',
    '[ x.y ] = {}',
    '[[ { x : foo()[y] } ]] = {}',
    '[{x: 1, y: 2, a: 5, b: 3}]',
    '[ { x : y } ] = {}',
    '[ { x : foo().y } ] = {}',
    '[ { x : foo()[y] } ] = {}',
    '[ { x : x.y } ] = {}',
    '[ [ x ] ] = {}',
    '[{x:x = 1, y:y = 2}, [z = 3, z = 4, z = 5]] = {}',
    '[x,,y] = {}',
    'x, [foo, bar] = doo',
    'x = [a, b] = y',
    '[a, b] = c = d',
    '[[x] = true] = y',
    '[foo = A] = arr;',
    '[...await]',
    '[.../x//yield]',
    '[...x = y];',
    '[x, y = 42, z] = {}',
    '[(x),,(y)] = {}',
    '[(x)] = {}',
    '[{[foo()] : foo().bar}] = {}',
    '[x,,...z]  = {}',
    '[{ x: (foo.bar) }] = {}',
    '[ ...(foo.bar) ]  = {}',
    '[x,y,...z] = {}',
    '[{[1+1] : (z)}] = {}',
    '[{ x: [321] }]',
    '[z, (y), z.y]',
    '[{ x, y, z } = { x: 44, y: 55, z: 66 }]',
    '[{ x }]',
    '[{ x: y = foo(1 ** 2) }] = {}',
    '[[foo]=[42]] = []',
    '[foo] = arr',
    '[[x = true] = true] = y',
    '[{ 1: y = foo((b)) } ]',
    '[a, ...b]',
    '[...[]]',
    '([a,,b]=0)',
    '([[]]=0)',
    '([...{x}] = y)',
    '([...a] = 0)',
    '[a,b=0,[c,...a[0]]={}]=0',
    '[ { x = 10 } = {} ]',
    '[ { x : y = 10 } = {} ]',
    '[ { x : foo().y = 10 } = {} ]',
    '[ { x : foo()[y] = 10 } = {} ]',
    '[ { x : x.y = 10 } = {} ]',
    '[ { x : x[y] = 10 } = {} ]',
    '[ [ x = 10 ] = {} ]',
    '[ [ foo().x = 10 ] = {} ]',
    '[ [ foo()[x] = 10 ] = {} ]',
    '[] = 0',
    '[...[...a[x]]] = 1',
    'for([a,b[a],{c,d=e,[f]:[g,h().a,(0).k,...i[0]]}] in 0);',
    '[...x] = {}',
    '[ ...(foo.bar) ] = []',
    '[ (y) ] = []',
    '[ (foo.bar) ] = []',
    '[x,y,...z] = {}',
    '[x,,...z] = {}',
    '[ok.v] = 20; ',
    '[a=10] = 0',
    '[,,]=0',
    '[a] = {};',
    '[...{a}] = [{}];',
    '[a] = [];',
    '[a] = [1, 2];',
    '[...((a))] = [1, 2, 3]',
    '[...[...[...a]]] = [[[]]];',
    'x; [{ x = 10 } = {}]',
    '[...[a].b1] = 3',
    '[ { x : foo().y } ] = x',
    '[ { x : foo()[y] } ] = x',
    '[ { x : x.y } ] = x',
    '[ [ x ] ] = x',
    '[ [ foo().x ] ] = x',
    '[ [ foo()[x] ] ] = x',
    '[ [ x.y ] ] = x',
    '[ [ x[y] ] ] = x',
    '[[...a], ...b] = [[],];',
    '[[[...a]]] = [[[]]];',
    '[a, [b]] = [1, []];',
    '[[a]] = [[]];',
    '[a = 1, b] = [];',
    '[a = 1] = [];',
    '[...this[0]] = []',
    '[obj.a ] = []',
    '[obj[0]] = []',
    '[a,b] = [10,20];',
    '[[x]] = 0',
    '[{m: 5 + t()}]',
    '[...[x]] = 0',
    '[x.a=a] = b',
    '[...[...a[x]]] = b',
    '[{a=0},{a=0}] = 0',
    '[[[[[[[[[[[[[[[[[[[[{a=b[0]}]]]]]]]]]]]]]]]]]]]]=0;',
    '[a = 0, ...{b = 0}] = 0',
    '[{a=0}, ...b] = 0',
    '[a, b] = [b, a]',
    '[...a] = [];',
    '[a] = [,,];',
    '[[a]=[1]] = [];',
    '[((((((x.y))))))] = obj',
    '[((((((x))))))] = obj',
    '[(x.y)] = obj',
    '[(x), async] = await;',
    '[,,a] = [];',
    '[,...a]',
    '[a, ...(b=c)]',
    '[ 0, ]',
    '[...x] = it',
    '[[ x ]] = [null];',
    '[ x ] = [];',
    '[ ...x ] = [];',
    '[...x[yield]] = [];',
    '[ a = x += 1, b = x *= 2 ]',
    '[arguments = 4, eval = 5]',
    '[ x = yield ]',
    '[ x = async ]',
    '[[ _ ]]',
    '[[ x ]]',
    '[x.y]',
    '[4]',
    '[ x , , ]',
    '[ x , ...y ]',
    '[...x, y]',
    '[...x,]',
    '[...x, ...y]',
    '[ , ...x]',
    '[, , x, , ...y]',
    '[...x = 1]',
    '0, [...x.y] = [23];',
    '[x = 23]',
    '[{ x: null }]',
    '[{ a: 4 }]',
    '[{}]',
    '[{[foo()] : foo().bar}]',
    '[_, x]',
    '[(x) = y] = z',
    '[(x) = y]',
    'a = {...b.c} = d;',
    '[ [ x[y] ] ] = x',
    '[ x = 10 ] = x',
    '[ foo().x = 10 ] = x',
    '[ foo()[x] = 10 ] = x',
    '[ x.y = 10 ] = x',
    '[ x[y] = 10 ] = x',
    '[ { x = 10 } = {} ] = x',
    '[ { x : y = 10 } = {} ] = x',
    '[ { x : foo().y = 10 } = {} ] = x',
    '[[y] = /a/ ]',
    '[{y} = /a/ ]',
    '[ { x : foo()[y] = 10 } = {} ] = x',
    '[ [ x = 10 ] = {} ] = x',
    '[ [ foo()[x] = 10 ] = {} ] = x',
    '[ [ x.y = 10 ] = {} ] = x',
    '[x,y,z] = x',
    '[x, y = 42, z] = x',
    '[{x:x = 1, y:y = 2}, [z = 3, z = 4, z = 5]] = x',
    '[(x)] = x',
    '[((x, y) => z).x] = x',
    '[((x, y) => z)["x"]] = x',
    '[ ...(a) ] = x',
    '[ (foo.bar) ] = x',
    '[[].length] = x',
    '[[x].length] = x',
    '[{}.length] = x',
    '[...true]',
    '[..."f".toString()]',
    '[...50]',
    '[..."foo".bar]',
    '[...(x)]',
    '[...(x,y)]',
    '[..."x".y]',
    '(x|y)^y',
    '[...{a = b}] = x',
    '[..."x" + y]',
    '[[[[z++]]]]',
    'array[1] === 2',
    '[5, ...[6, 7, 8], 9]',
    '[() => {}]',
    '[abc => {}]',
    '[x,,,]',
    '[x,,y]',
    '[this];',
    '[,,,]',
    '[,,x]',
    '[..."foo".foo=x]',
    '[x, y] = z;',
    '[x, y, ...z]',
    '[x.y] = z',
    '[x().y] = z',
    '[1, 2, ...target = source]',
    '[[ x ]] = [ , ];',
    '[[ x ]] = [undefined];',
    '[ a = x += 1, b = x *= 2 ] = value',
    '[a,b=0,[c,...a[0]]={}]=0;',
    '[{a=b}=0]',
    '[...a[0]] = 0;',
    '[x, , [, z]] = [1,2,[3,4]]',
    '[{ x }] = [null];',
    '[{ x }] = [];',
    '[{ x }] = [ , ];',
    'a = [{ x = yield }] = value;',
    'a = [[x[yield]]] = 123;',
    '[a = 0, ...{b = 0}] = 0',
    '[x.a=a] = 0',
    '[a, ...b] = c;',
    '[...a] = b;',
    '[{ a, b }, ...c] = d;',
    '[a, ...[b, c]] = d;',
    '[a, b] = [b, a];',
    '[x = 10, y = 5, z = 1] = a;',
    '[x = 10, y, z] = a;',
    '[ok.v] = 20;',
    '([y]) => x;',
    '[x=10] = x',
    '[x = 10, [ z = 10]] = a;',
    '[x, , [, z]] = [1,2,[3,4]];',
    '[x[a]=a] = 0',
    '[ { x = 10 } = {} ]',
    '[ { x : y = 10 } = {} ]',
    '[ { x : foo().y = 10 } = {} ]',
    '[ { x : foo()[y] = 10 } = {} ]',
    '[ { x : x.y = 10 } = {} ]',
    '[ { x : x[y] = 10 } = {} ]',
    '[ [ x = 10 ] = {} ]',
    '[ [ foo().x = 10 ] = {} ]',
    '[ [ foo()[x] = 10 ] = {} ]',
    '[a * 1]',
    '[7 * 1]',
    'function x([ a, b ]){}',
    'x, [foo + y, bar] = doo',
    '[{a = b} = x]',
    '[{x: y.z}] = a',
    '[{a}] = x',
    '[{a:b}] = x',
    '[{a:b}] = x',
    '[{a:1}.foo] = x',
    'x, [foo = y, bar] = doo',
    '"use strict"; const { [eval]: []} = a;',
    'function *f(){ return [...yield]; }',
    '[x = true] = y',
    '[[x] = true] = y',
    '["foo".foo] = x',
    'result = [...{ x = yield }] = y;',
    '[/foo/.length] = x',
    'function* g() {   [...{ x = yield }] = y   }',
    '[[x = true] = true] = y',
    '[...{x}=y];',
    '[(a)] = 1',
    '[...x.list];',
    '[...x.list] = a;',
    '[a, {b:d}, c] = obj',
    '[a, {[b]:d}, c] = obj',
    '[please, {[make]: it}, stop] = bwahahahaha',
    '[pweeze = [pretty] = please, {[make]: it}, stop] = bwahahahaha',
    'log({foo: [bar]});',
    'log({foo: [bar]} = obj);',
    '[...{a = b} = c];',
    '[a, {b}, c] = obj',
    '[z++]',
    '[...a === e ? f : g ]',
    '[...a === e ? f : g ]',
    'x = { ...1 ? a : []}',
    '[foo = A, bar = B] = arr;',
    '[foo, bar] = arr;',
    '[{}.foo] = x',
    `[...await]`,
    `[...{x}**y]`,
    '[a=[...b], ...c] = obj;',
    `x = [a, ...b]`,
    '[]',
    '[]',
    '[[,,]]',
    '[[],,]',
    '[[[]]]',
    '[[],[]]',
    '[]',
    '[ ([a] = []) ]',
    '[(foo())]',
    'x, [foo, bar] = doo;',
    '[(50)]',
    '[(a) = b] = [];',
    '[(a.b)] = [];',
    '[x().foo = x] = x',
    '[x + y]',
    '[x]',
    '[a.b] = c',
    '[a] = b;',
    '[x, y]',
    '[x = y]',
    '[x.y = z]',
    '[x = y, z]',
    '[x = true]',
    '[x, z]',
    '[x, z = {}]',
    '[x, (z)]',
    '[(x), (z) = x]',
    '[x, z = y() ** 2]',
    '[x /= 2, z]',
    '[x(y), z]',
    '[x, z() ** y]',
    '[x, z.y = (foo) ** 2]',
    '[x, z][[x2>>>3]]',
    '[...x]',
    '[x,y,...z]',
    '[x,,...z]',
    '[ ...(foo.bar) ]',
    '[a = 1]',
    '[ (y) ]',
    '[ (foo.bar) ]',
    '[x, y, ...z] = obj',
    '[{}.x] = y',
    '[x, ...y, z]',
    '[x, y, ...z()]',
    '[x, y, ...z + arr]',
    '[x, ...z = arr, y]',
    '[x, ...z + arr, y]',
    '[x, ...z(), y]',
    '[x, y, ...z = arr]',
    '[foo, [x,y,z], bar = B] = arr;',
    '[foo, [[[[[[[[[[[[[x,y,z]]]]]]]]]]]]], bar = B] = arr;',
    '[foo, [x,y = 20,z], bar = B] = arr;',
    '[[x].length - 2, z() - 2]',
    '[x.b = 2, z]',
    '[x.b /= 2, z]',
    '[x.b /= 2, z.y().foo ** bar]',
    '[x, z ? (2) : y]',
    '[x, z = y ? (2) : y]',
    '[x] = obj',
    '[x().foo = x] = x',
    '[x().foo] = x',
    '[(a), b] = [];',
    '[x().foo = x, x().foo = x, (x)] = x ** y',
    '[(x), (y) = z, (z) ? x : 2] = x ** y',
    '[{}, {x: b = c ? d : e}]',
    '[[foo].length] = {}',
    '[[foo].length = x] = x',
    '[a[x.y]] = z',
    '[x()[y]] = z',
    '[x.y = a] = z',
    '[a,b=[x,y]] = z',
    '[[].x] = y',
    '([x[y]] = z)',
    '[5..length] = x',
    '["X".length] = x',
    '[(a)] = x',
    '[(a) = x] = x',
    '[((((vrh190 )))) = 5184] = []',
    '[(x).foo = x] = x',
    '[([1].c)] = []',
    '[(x().foo)] = x',
    '[x()[y] = a ] = z',
    '[a[x.y] = a + b] = z',
    '[a[x.y] = a] = z',
    '[x.y] = z',
    '[...[{prop: 1}.prop]] = []',
    '[this.a ] = []',
    '[1 <= 0]',
    '[a, ...b=c.d = 2]',
    '[a, ...b=c]',
    '([a, ...b=c])',
    '[ c.d === (e ? f : g )]',
    '[["b"] === e ? f : g ]',
    '[([b].c.d) === e ? f : g ]',
    '[([b].c.d) === e ? f : g /= 1]',
    '[...{}[x ? {zzz} : (z)] /= a]',
    '[..."b" === e ? f : g ]',
    '[...[b].c.d === e ? f : g ]',
    '[...{}[x ? y : z] += a]',
    '[...[][x ? y : z] += a]',
    '[ ...c.d === e ? (f) : (g) ]',
    '[(x.y) = 42]',
    '[x.y = 42]',
    '[[], [b, c], []];',
    '[a,, b,];',
    '[a,,,, b];',
    '[a, b,, c];',
    '[(a), ] = x;',
    '[ [b].c.d === e ? f : g ]',
    '[ c.d === (e ? f : g ) ? x : y]',
    '[([b].c.d) === {string} ? f : g ]',
    '[([3].c.d) === e ? f : g /= 1]',
    '[(x.y) = [1/42]]',
    '[{}[x ? {zzz} : (z)] /= a]',
    '[ c.d === e ? (f) : (g) ]',
    '[{}[x ? y : z] += a]',
    '["b" === e ? f : g ]',
    '[ c.d === (e ? f : g ) ? x : y]',
    '[(a) = (b)]',
    '[(x) = y = (z)]',
    '[a=5, b=7] = [1];',
    '[a=5, b=(7)] = ([1]);',
    '[a=5, b=(async)] = ([1]);',
    '[({a})]',
    '[({a}), ({b})]',
    '[(({a}), ({b}))]',
    '([(({a}), ({b}))])',
    '[1, ...rest]',
    '[...rest, 1]',
    '[...rest, ,1]',
    '[{a: 0}.x] = [];',
    '[[0].x] = [];',
    '[...{a: 0}.x] = [];',
    '[...[0].x] = [];',
    '({a: {b: 0}.x} = {});',
    '({a: [0].x} = {});',
    '({...{b: 0}.x} = {});',
    '({...[0].x} = {});',
    '({...{eval}.x} = {});',
    '[{eval}.x] = [];',
    '[[[[[[[101]]]]]]];',
    '[[[[[[[a]]]]]]] = b;',
    '[[[[[[[a=b]]]] = c] = c] = c] = c;',
    '[[[[[[[a=b] = c] = c] = c] = c] = c] = c] = c;',
    '[[[[[[[a=b]] = c]] = c] = c] = c] = c;',
    '[[[[[[[a=b] = c]]] = c] = c] = c] = c;',
    '[[[[[[[a=b]]]] = c] = c] = c] = c;',
    '[[[[[[[a=b] = c] = c] = c] = c] = c] = c] = [[[[[[[a=b] = c]]] = c] = c] = c] = c;',
    '[[[[[[[a=b]] = c]] = c] = c[[[[[[[a=b] = c]]] = c] = c] = c] = c] = c] = c;',
    '[ x = yield ] ',
    '0, [[ _ ]] = [null];',
    '[[1]];',
    '[[a] ? x : bcd]',
    '[[a] / bcd]',
    '([a] / bcd)',
    '[ x ] = [];',
    '[a, b] = f(() => {  }); ',
    '[a, b] = f(() => { [a, b.c] = [d.e, (f.g) = h] }); ',
    '([a, b] = f(() => { [a, b.c] = [d.e, (f.g) = h] }));',
    '[a, b] = f(); ',
    '[(a) = (b)]',
    '[(x) = y = (z)]',
    '[(x) = y = (z) => (a)]',
    '[(x) => y = (z)]',
    '[(x), y = x] = x;',
    '[(x), y] = x;',
    '[(async), y] = x;',
    '[(x), async] = x;',
    '[(x), await] = x;',
    '[a, b, c];',
    '[ x[yield] ] = [33];',
    '[5[foo]] = x',
    '[,] = [];',
    '[] = null',
    '[{a: 1, b: 2, ...null}]',
    '[{a: 1, b: 2, ...o}]',
    '[5, ...[6, 7, 8], 9]',
    '[,,,1,2]',
    '[,,,,,,,,,,,,,,,,,,,,,,,,,]',
    '[,,,,a,,,,,,b,,,,,,,,,1,,,,,,]',
    '[,,,,,,,,[5, ...[6, 7, 8], 9],,,,,,,,,,,,,,,,,]',
    '[,,,,,,,,,,,,,,,,,,,,,,,,,]',
    '[,,,,,,,,,,,,,,,,,,,,,,,,,]',
    `[({a: 1}.c)] = [];`,
    '[,,3,,,];',
    '[[1,2], [3], []];',
    '0, [ x = y ] = [];',
    '[(a) = 0] = 1',
    '[(a) = 0] = 1',
    '[(a.b)] = 0',
    '[([1].c)] = [];',
    '[a = (b = c)] = 0',
    '[(a = 0)]',
    '({a:(b)} = 0)',
    `[,a,,]`,
    `[,a,a,]`,
    `[,a,]`,
    `[,a,,]`,
    `[,a,a,]`,
    `[,,a]`,
    `[,a,a]`,
    `[,,a,]`,
    `[,,a,]`,
    `[,,,a]`,
    `[,,a,a]`,
    '[,]',
    'a = [,]',
    'a = [,]',
    '[[1,2], [3], []]',
    '[1,2,,4,5]',
    '[0, ...a];',
    '[...iter];',
    'a = [a = [,],a = [a = [,],a = [,]]]',
    'async = [,]',
    `async ([[[]]]) => [[,,a,a=> {}]]`,
    `[[,,a,a=> {}]]`,
    `[[,,a=> {},a]]`,
    `[[a=> {},,a,]]`,
    `[[] = [9], {} = [], c = d, [,,a,a=> {}]]`,
    `[[,,a,a=> {}]]`,
    '([].x);',
    '[...this, y];',
    '[...x, y];',
    '[...x];',
    '[...a]',
    '[...a,]',
    '[...a, ,]',
    '[, ...a]',
    '[...a, ...b]',
    '[...a, , ...b]',
    '[...[...a]]',
    '[...[...async]]',
    '[, ...a]',
    '[, , ...a]',
    '[,]',
    `[...50..bar]`,
    `[...50]`,
    '[...a=b]',
    '[{}.foo] = x',
    '[{}[foo]] = x',
    `[[]]`,
    '([...x]) => x',
    '([...x]);',
    '([...x=y]);',
    '([...x, ...y]);',
    '([...x.y] = z)',
    '([...x, ...y]);',
    '[{}.foo]=x',
    '[5[foo]]=x',
    `[x]=y`,
    `[x=y]=z`,
    `({15: bar});`,
    `({15(){}});`,
    `({15: bar}) => x`,
    '[...a.b] = c',
    '([...a.b] = c)',
    '([...[x]]) => x',
    '[(a)] = x',
    '(z = [...x.y] = z) => z',
    '(z = [...x.y]) => z',
    '[...[x]=y];',
    '[...[{a: b}.c]] = [];',
    `[...a = b] `,
    'result = [ x = yield ] = [[22]];',
    'result = [[x[yield]]] = [[22]];',
    '[{...o, ...o2}]',
    '({...this, y})',
    '(null, [...[]])',
    'apply(null, [...[]])',
    '[...target = source]',
    '[foo.foo, foo.bar] = [1, 2];',
    '({ a: {prop: 1}.prop } = {})',
    '[foo, bar] = [0,1];',
    '[a,a,,...a]=0',
    '[...a[0]] = 0',
    `({25: true})`,
    '[a.b=[c.d]=e] = f;',
    '([a=[b.c]=d]) => e;',
    '[{x: y.z}] = a',
    '([a] = b) => c;',
    '([a]) => b;',
    '[...x] = y;',
    '[...async] = y;',
    '[...this];',
    '[...new x];',
    '[...x/y];',
    '[...x = x];',
    '([...x=y])',
    'async([].x);',
    '[...[a]=1]',
    '[...[1]]',
    'a = [,] = b = [] = c[9]',
    'a = [(b), (c), (d)]',
    'a = [(b) => {}, (c) => {}, (d) => { [b]}]',
    'a = [(b) => {}, [(b) => {}, (c) => {}, (d) => { [b]}]]',
    'a = [,]',
    'a = [,]',
    'a = [a = [,],a = [a = [,],a = [,]]]',
    '[...(x), y]',
    `[...{a: b.b}.d] = c`,
    `[...{a: b}.c] = []`,
    `[...[{a: b}.c]] = [];`,
    '[...{length}] = [ 1, 2, 3]',
    `[(a) = x] = x`,
    `[a, {[b]:d}, c] = obj`,
    `[(a)] = x`,
    '[a, b, [c, d], e=2, ...f] = g',
    '[a]={b}=c',
    '[...bar]',
    '[a, ...bar]',
    '[...bar, a]',
    '[...bar,,,,]',
    '[,,,,...bar]',
    '[{}.x] = y',
    '({a: x = true} = y)',
    '[[ x ]] = [null];',
    '[/x/g.length] = x',
    '[.../x/]',
    '[...{x}/y]',
    '[.../x/+y]',
    '[.../x//y]',
    '[.../x/g/y]',
    'function foo([{y1:y1 = 1} = {y1:2}] = [{y1:3}]) {}',
    '[[ x ]] = [ , ];',
    '[[ x ]] = [undefined];',
    '[[ x ]] = [];',
    '[1,2,3,4,5]',
    '[, ...(o.prop)]',
    '[, ...(o.call().prop)]',
    '[, ...[...(o.prop)]]',
    '[, ...[...(o.call().prop)]]',
    '{a: [, ...rest]}',
    '[, ...[...rest]]',
    '[, [, ...[...rest]]]',
    '{a: [, ...[...rest]]}',
    '[, ...{0: a, 1: b}]',
    '[, [, ...{0: a, 1: b}]]',
    '({a:(b) = 0} = 1)',
    '({a:(b.c)} = 0)',
    '({a:(b = 0)})',
    '[a] = 0;',
    `[...a = b] `,
    '[foo.foo, foo.bar] = [1, 2]',
    '[[a, b]] = [[1, 2]]',
    '[a, b, ...c] = [1, 2, 3, 4]',
    '[[a, b, ...c]] = [[1, 2, 3, 4]]',
    '[a, b] = [1, 2, 3]',
    '[[a, b]] = [[1, 2, 3]]',
    '[a[0], a[1]] = [a[1], a[0]]',
    '[a, b] = [foo(), bar]',
    '[a, b] = [1, 2];',
    '[a, b] = [, 2]',
    '[a, b] = f()',
    'result = [ x = yield ] = [[22]];',
    'result = [[x[yield]]] = [[22]];',
    '[] = true',
    '[a=5, b=(7).c.d] = ([1]);',
    '[a, b] = [b, a];',
    '[a, b.c] = [d.e, f.g];',
    '[a, b.c] = [d.e, (f.g) = h];',
    '[a, ...b] = [1, 2, 3];',
    '[a, ...b] = [1, 2, ...c];',
    '[a, ...b] = [1, 2, ...(c / 2)];',
    '[a, ...b] = [1, 2, ...c / 2];',
    '[a, ...b] = ([1, 2, ...c / 2]);',
    '[async, ...b] = ([1, 2, ...c / 2]);',
    '[a, ...b] = ([1, 2, ...async / 2]);',
    '[[[a.b =[]]]]',
    '[[[a.b =[{ x: x.b }]]]]',
    '[[[a.b =[{ x: x.b }]]]]',
    '[[[a.b =[{ x: x.b }]]] = abc]',
    '[(x) => y = (z)]',
    '[a, b, ...rest] = [10, 20, 30, 40, 50];',
    '[(x), y = x] = x;',
    '[a, b] = [1];',
    '[a] = [2];',
    '[x.y = a + b] = z',
    '[x().y = a + b] = z',
    '[x().y = a] = z',
    '[...a.b] = c',
    '[[][x]] = y',
    '[...[...[...[...[...[]]]]]]',
    '[...[...[...[...[...[5]]]]]]',
    '[x, ...a] = [1, 2, 3]',
    '[...a, ...a, ...a]',
    '[1, 2, ...a, 1, 2]',
    '[1].concat(a)',
    '[50..foo] = x',
    '[ x += x ]',
    'foo([a, b] = arr);',
    'a = [, , x, , ...y] = value;',
    '[ ...(a) ]',
    '[ {}[x()] ]',
    '[[(x, y)]]',
    '[[x[yield]]]',
    '[...{ 1: x }]',
    '[(a.x)] = t; ',
    '[(((x)))]',
    '[...x.y]',
    '[x,] = 0',
    '[x,,] = 0',
    '[, x,,] = 0',
    '[x, ...y] = [1, 2, 3];',
    '[, ...x] = [1, 2, 3];',
    '[...{x = 1}] = [{}]',
    '[...[x]] = 0',
    '[x, ...{0: y}] = 0',
    '[ ...(++y) ]',
    '[x, x] = 0',
    '[({a: 1}.c)] = []',
    '[x, ...x] = 0',
    '[[...x] = [2, 1, 3]]',
    '[{ x: 11, y: 22, z: 33 }]',
    '[{x : [{y:{z = 1}, z1 = 2}] }, {x2 = 3}, {x3 : {y3:[{z3 = 4}]}} ] = [{x:[{y:{}}]}, {}, {x3:{y3:[{}]}}];',
    'a = [{ x }] =  [{ x: 2 }];',
    '[{ x = 10 } = {}]',
    '[o.x=1]=[]',
    'a = [x.y] = [123];',
    'a = [x.y] = value;',
    '[a,a,,...a]=0;',
    '[(a.x)] = t;',
    '[(x)] = t; ',
    '[(((x)))] = t',
    'a = [ x[yield] ] = [33];',
    'a = [...[x, y]] = [null];',
    'a = [...x.y] = [4, 3, 2];',
    'a = [...[x[yield]]] = [2018];',
    'a = [...{ 0: x, length }] = value;',
    'a = [...{ 1: x }] = [1, 2, 3];',
    '[,] = null;',
    '[[x]] = [[1]];',
    'a = [ x = yield ] = [];',
    'result = [, x, , y, ,] = [1, 2, 3, 4, 5, 6];',
    'a = [ x = flag = true ] = [];',
    'a = [ a = x += 1, b = x *= 2 ] = [];',
    'a = [arguments = 4, eval = 5] = value;',
    '[...++x]',
    '[(a)] = 0',
    '[(a.b)] = 0',
    '[a, b] = [1, 2]',
    '[(a) = 0] = 1',
    '[a, ...b = 20,,]',
    '[...{ a }] = b',
    '[...{eval}.x] = [] = {}',
    '[(x).foo = x] = x',
    '[x()]',
    '[(x)] = obj',
    '[a.b=[c.d]=e] = f;',
    '[[[[[[[a=b] = c] = c] = c] = c] = c] = c] = [[[[[[[a=b] = c]]] = c] = c] = c] = c;',
    'a = [ a = x += 1, b = x *= 2 ] = value;',
    '[x.y = z]',
    '[1, 2, 3, ...[]]',
    '[[[[z++]]]]',
    '[...[x]/y]',
    '[...[ x = 5 ] ] = x',
    '[void x]',
    '[false]',
    '[function(){}.length] = x',
    '(foo, [bar, baz] = doo);'
  ]) {
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        parseScript(`${arg}`);
      });
    });
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        recovery(`${arg}`, 'recovery.js');
      });
    });
    it(`${arg}`, () => {
      t.doesNotThrow(() => {
        recovery(`${arg}`, 'recovery.js', { module: true });
      });
    });
  }
});
